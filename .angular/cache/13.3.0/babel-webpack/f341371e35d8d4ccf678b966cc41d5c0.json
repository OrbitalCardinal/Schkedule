{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\vitor\\\\Documents\\\\Prueba\\\\Schkedule\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nexport class AuthService {\n  constructor(auth) {\n    this.auth = auth;\n  }\n\n  register(email, password) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        return yield _this.auth.createUserWithEmailAndPassword(email, password);\n      } catch (error) {\n        console.log(\"Error: \", error);\n        return null;\n      }\n    })();\n  }\n\n  login(email, password) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        const result = yield _this2.auth.signInWithEmailAndPassword(email, password);\n        return result;\n      } catch (error) {\n        console.log(\"Error: \", error);\n      }\n    })();\n  }\n\n  logout() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        yield _this3.auth.signOut();\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }\n\n}\n\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.AngularFireAuth));\n};\n\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/vitor/Documents/Prueba/Schkedule/src/app/services/auth.service.ts"],"names":["i0","i1","AuthService","constructor","auth","register","email","password","createUserWithEmailAndPassword","error","console","log","login","result","signInWithEmailAndPassword","logout","signOut","ɵfac","AuthService_Factory","t","ɵɵinject","AngularFireAuth","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,2BAApB;AACA,OAAO,MAAMC,WAAN,CAAkB;AACrBC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACH;;AACKC,EAAAA,QAAQ,CAACC,KAAD,EAAQC,QAAR,EAAkB;AAAA;;AAAA;AAC5B,UAAI;AACA,qBAAa,KAAI,CAACH,IAAL,CAAUI,8BAAV,CAAyCF,KAAzC,EAAgDC,QAAhD,CAAb;AACH,OAFD,CAGA,OAAOE,KAAP,EAAc;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACA,eAAO,IAAP;AACH;AAP2B;AAQ/B;;AACKG,EAAAA,KAAK,CAACN,KAAD,EAAQC,QAAR,EAAkB;AAAA;;AAAA;AACzB,UAAI;AACA,cAAMM,MAAM,SAAS,MAAI,CAACT,IAAL,CAAUU,0BAAV,CAAqCR,KAArC,EAA4CC,QAA5C,CAArB;AACA,eAAOM,MAAP;AACH,OAHD,CAIA,OAAOJ,KAAP,EAAc;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACH;AAPwB;AAQ5B;;AACKM,EAAAA,MAAM,GAAG;AAAA;;AAAA;AACX,UAAI;AACA,cAAM,MAAI,CAACX,IAAL,CAAUY,OAAV,EAAN;AACH,OAFD,CAGA,OAAOP,KAAP,EAAc;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AANU;AAOd;;AA7BoB;;AA+BzBP,WAAW,CAACe,IAAZ,GAAmB,SAASC,mBAAT,CAA6BC,CAA7B,EAAgC;AAAE,SAAO,KAAKA,CAAC,IAAIjB,WAAV,EAAuBF,EAAE,CAACoB,QAAH,CAAYnB,EAAE,CAACoB,eAAf,CAAvB,CAAP;AAAiE,CAAtH;;AACAnB,WAAW,CAACoB,KAAZ,GAAoB,aAActB,EAAE,CAACuB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEtB,WAAT;AAAsBuB,EAAAA,OAAO,EAAEvB,WAAW,CAACe,IAA3C;AAAiDS,EAAAA,UAAU,EAAE;AAA7D,CAAtB,CAAlC","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/fire/compat/auth\";\r\nexport class AuthService {\r\n    constructor(auth) {\r\n        this.auth = auth;\r\n    }\r\n    async register(email, password) {\r\n        try {\r\n            return await this.auth.createUserWithEmailAndPassword(email, password);\r\n        }\r\n        catch (error) {\r\n            console.log(\"Error: \", error);\r\n            return null;\r\n        }\r\n    }\r\n    async login(email, password) {\r\n        try {\r\n            const result = await this.auth.signInWithEmailAndPassword(email, password);\r\n            return result;\r\n        }\r\n        catch (error) {\r\n            console.log(\"Error: \", error);\r\n        }\r\n    }\r\n    async logout() {\r\n        try {\r\n            await this.auth.signOut();\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\nAuthService.ɵfac = function AuthService_Factory(t) { return new (t || AuthService)(i0.ɵɵinject(i1.AngularFireAuth)); };\r\nAuthService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AuthService, factory: AuthService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}